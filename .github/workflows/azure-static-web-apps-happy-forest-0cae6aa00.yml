name: Azure Static Web Apps CI/CD # Nama workflow Anda

on:
  push:
    branches:
      - main # Ganti dengan nama branch utama Anda (misalnya: master, main)
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main # Ganti dengan nama branch utama Anda

jobs:
  build_and_deploy_job:
    # Kondisi untuk menjalankan job: hanya pada push ke branch utama, atau pada pull request yang dibuka/disinkronkan/dibuka kembali (bukan yang ditutup)
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest # Runner yang digunakan untuk menjalankan job

    name: Build and Deploy Job # Nama job
    steps:
      - uses: actions/checkout@v3 # Checkout kode dari repositori
        with:
          submodules: true # Mendukung submodule Git jika ada
          lfs: false       # Mendukung Git LFS jika ada

      - name: Build And Deploy # Nama langkah build dan deploy
        id: builddeploy # ID untuk langkah ini, bisa digunakan untuk mereferensikan outputnya
        uses: azure/static-web-apps-deploy@v1 # Menggunakan action deployment Azure Static Web Apps
        with:
          # Token API untuk otentikasi ke Azure Static Web Apps.
          # Ini adalah secret yang dibuat secara otomatis oleh Azure saat Anda mengatur SWA.
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_YOUR_APP_ID }} 
          # Ganti YOUR_APP_ID dengan ID unik aplikasi Static Web Apps Anda di Azure.
          # Contoh: AZURE_STATIC_WEB_APPS_API_TOKEN_AMBITIOUS_BAY_0A1B2C3

          # Token repositori GitHub, digunakan untuk integrasi GitHub (misalnya, komentar PR)
          repo_token: ${{ secrets.GITHUB_TOKEN }} 
          
          # Aksi yang akan dilakukan oleh action (dalam kasus ini, mengunggah file)
          action: "upload"
          
          # Lokasi folder aplikasi frontend Anda relatif terhadap root repositori.
          # Karena index.html dan folder js/ Anda ada di root, gunakan "/".
          app_location: "/" 
          
          # Lokasi folder API PHP Anda relatif terhadap root repositori.
          api_location: "/api" 
          
          # Lokasi output build aplikasi frontend Anda.
          # Karena ini aplikasi HTML/JS statis tanpa proses build yang menghasilkan subfolder,
          # outputnya dianggap berada di root aplikasi.
          output_location: "/" 
          
          # PENTING: Ini memberi tahu Azure untuk TIDAK mencoba menjalankan perintah build untuk aplikasi frontend.
          # Ini diperlukan karena aplikasi Anda adalah HTML/JS sederhana tanpa package.json atau skrip build.
          skip_app_build: true 
          
          # Opsi tambahan (opsional, uncomment jika diperlukan):
          # api_build_command: '' # Jika Anda memiliki perintah build khusus untuk API PHP Anda
          # skip_api_build: true # Jika Anda tidak ingin Oryx melakukan build apapun pada API PHP (misalnya, jika Anda sudah mengelola dependensi PHP secara manual)
          # config_file_location: '' # Jika file konfigurasi SWA Anda berada di lokasi non-standar
          # app_artifact_location: '' # Jika artefak aplikasi Anda berada di lokasi non-standar setelah build
          # routes_location: '' # Jika file routes.json Anda berada di lokasi non-standar
          # production_branch: 'main' # Jika Anda ingin menentukan branch produksi secara eksplisit
          # deployment_environment: 'production' # Lingkungan deployment (misalnya: production, staging)
          # is_static_export: false # Set ke true jika Anda menggunakan Next.js/Nuxt.js dengan static export

